{
	"name": "cleaning",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_extracted_data_sql",
						"type": "DatasetReference"
					},
					"name": "RawProductData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_extracted_data_to_prep_sql",
						"type": "DatasetReference"
					},
					"name": "MoveToPrep"
				}
			],
			"transformations": [
				{
					"name": "CategoriesDuplicates"
				},
				{
					"name": "FilterDuplicates"
				},
				{
					"name": "SelectRequiredColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          category as string,",
				"          subCategory as string,",
				"          subCategory1 as string,",
				"          departmentCode as string,",
				"          categoryCode as string,",
				"          categoryName as string,",
				"          searchCategoryCode as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          brandCode as string,",
				"          brandUrlCode as string,",
				"          brandName as string,",
				"          seriesStatus as integer,",
				"          minStandardDaysToShip as string,",
				"          maxStandardDaysToShip as string,",
				"          minPricePerPiece as string,",
				"          maxPricePerPiece as string,",
				"          directCartType as string,",
				"          priceCheckLessFlag as string,",
				"          minStandardUnitPrice as float,",
				"          maxStandardUnitPrice as float,",
				"          recommendFlag as string,",
				"          iconTypeList as string,",
				"          volumeDiscountFlag as string,",
				"          cValueFlag as string,",
				"          stockItemFlag as string,",
				"          displayStandardPriceFlag as string,",
				"          discontinuedProductFlag as string,",
				"          promptDeliveryFlag as string,",
				"          keywordClickCount as string,",
				"          specialShipmentFlag as string,",
				"          recommendFlagdata as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> RawProductData",
				"RawProductData window(asc(seriesCode, true),",
				"     duplicate = iif(lag(seriesCode)==seriesCode, true(), false())) ~> CategoriesDuplicates",
				"CategoriesDuplicates filter(!duplicate) ~> FilterDuplicates",
				"FilterDuplicates select(mapColumn(",
				"          departmentCode,",
				"          category,",
				"          subCategory,",
				"          subCategory1,",
				"          categoryCode,",
				"          categoryName,",
				"          searchCategoryCode,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandUrlCode,",
				"          brandName,",
				"          seriesStatus,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          directCartType,",
				"          priceCheckLessFlag,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          recommendFlag,",
				"          volumeDiscountFlag,",
				"          cValueFlag,",
				"          stockItemFlag,",
				"          displayStandardPriceFlag,",
				"          discontinuedProductFlag,",
				"          promptDeliveryFlag,",
				"          keywordClickCount,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRequiredColumns",
				"SelectRequiredColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> MoveToPrep"
			]
		}
	}
}